{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Homework 4-2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Nominal GDP</th>\n",
       "      <th>Real GDP</th>\n",
       "      <th>CPI</th>\n",
       "      <th>Currency</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>DATE</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1975-03-31</th>\n",
       "      <td>1616.116</td>\n",
       "      <td>5548.156</td>\n",
       "      <td>52.566667</td>\n",
       "      <td>7.752108e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1975-06-30</th>\n",
       "      <td>1651.853</td>\n",
       "      <td>5587.800</td>\n",
       "      <td>53.200000</td>\n",
       "      <td>7.934238e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1975-09-30</th>\n",
       "      <td>1709.820</td>\n",
       "      <td>5683.444</td>\n",
       "      <td>54.266667</td>\n",
       "      <td>8.190892e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1975-12-31</th>\n",
       "      <td>1761.831</td>\n",
       "      <td>5759.972</td>\n",
       "      <td>55.266667</td>\n",
       "      <td>8.389500e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1976-03-31</th>\n",
       "      <td>1820.487</td>\n",
       "      <td>5889.500</td>\n",
       "      <td>55.900000</td>\n",
       "      <td>8.460008e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-06-30</th>\n",
       "      <td>21329.877</td>\n",
       "      <td>19020.599</td>\n",
       "      <td>255.170667</td>\n",
       "      <td>1.732411e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-09-30</th>\n",
       "      <td>21540.325</td>\n",
       "      <td>19141.744</td>\n",
       "      <td>256.324667</td>\n",
       "      <td>1.752159e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-12-31</th>\n",
       "      <td>21747.394</td>\n",
       "      <td>19253.959</td>\n",
       "      <td>257.832333</td>\n",
       "      <td>1.782327e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-03-31</th>\n",
       "      <td>21561.139</td>\n",
       "      <td>19010.848</td>\n",
       "      <td>258.607667</td>\n",
       "      <td>1.806147e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-06-30</th>\n",
       "      <td>19520.114</td>\n",
       "      <td>17302.511</td>\n",
       "      <td>256.294667</td>\n",
       "      <td>1.921649e+06</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>182 rows Ã— 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            Nominal GDP   Real GDP         CPI      Currency\n",
       "DATE                                                        \n",
       "1975-03-31     1616.116   5548.156   52.566667  7.752108e+04\n",
       "1975-06-30     1651.853   5587.800   53.200000  7.934238e+04\n",
       "1975-09-30     1709.820   5683.444   54.266667  8.190892e+04\n",
       "1975-12-31     1761.831   5759.972   55.266667  8.389500e+04\n",
       "1976-03-31     1820.487   5889.500   55.900000  8.460008e+04\n",
       "...                 ...        ...         ...           ...\n",
       "2019-06-30    21329.877  19020.599  255.170667  1.732411e+06\n",
       "2019-09-30    21540.325  19141.744  256.324667  1.752159e+06\n",
       "2019-12-31    21747.394  19253.959  257.832333  1.782327e+06\n",
       "2020-03-31    21561.139  19010.848  258.607667  1.806147e+06\n",
       "2020-06-30    19520.114  17302.511  256.294667  1.921649e+06\n",
       "\n",
       "[182 rows x 4 columns]"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from datlib.plots import * \n",
    "from datlib.FRED import *\n",
    "data_codes  = {\"Nominal GDP\": \"GDP\",\n",
    "               \"Real GDP\": \"GDPC1\",\n",
    "              \"CPI\" : \"CPIAUCSL\",\n",
    "              \"Currency\": \"MBCURRCIRW\"}\n",
    "start = datetime.datetime(1975, 1, 1)\n",
    "end = datetime.datetime.today()\n",
    "data = gather_data(data_codes = data_codes, start = start, end = end, freq = \"Q\")\n",
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "            Nominal GDP   Real GDP         CPI      Currency\n",
      "DATE                                                        \n",
      "1975-03-31     1616.116   5548.156   52.566667  7.752108e+04\n",
      "1975-06-30     1651.853   5587.800   53.200000  7.934238e+04\n",
      "1975-09-30     1709.820   5683.444   54.266667  8.190892e+04\n",
      "1975-12-31     1761.831   5759.972   55.266667  8.389500e+04\n",
      "1976-03-31     1820.487   5889.500   55.900000  8.460008e+04\n",
      "...                 ...        ...         ...           ...\n",
      "2019-06-30    21329.877  19020.599  255.170667  1.732411e+06\n",
      "2019-09-30    21540.325  19141.744  256.324667  1.752159e+06\n",
      "2019-12-31    21747.394  19253.959  257.832333  1.782327e+06\n",
      "2020-03-31    21561.139  19010.848  258.607667  1.806147e+06\n",
      "2020-06-30    19520.114  17302.511  256.294667  1.921649e+06\n",
      "\n",
      "[182 rows x 4 columns]\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "df = pd.DataFrame(data,columns=['Nominal GDP','Real GDP','CPI','Currency'])\n",
    "print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "             Nominal GDP  Real GDP       CPI  Currency\n",
      "Nominal GDP     1.000000  0.992692  0.982329  0.979712\n",
      "Real GDP        0.992692  1.000000  0.989494  0.952486\n",
      "CPI             0.982329  0.989494  1.000000  0.935613\n",
      "Currency        0.979712  0.952486  0.935613  1.000000\n"
     ]
    }
   ],
   "source": [
    "#Correlation Matrix of the Levels of our variables\n",
    "df = pd.DataFrame(data,columns=['Nominal GDP','Real GDP','CPI', 'Currency'])\n",
    "\n",
    "corrMatrix = df.corr()\n",
    "print (corrMatrix)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "            Nominal GDP  Real GDP       CPI  Currency\n",
      "DATE                                                 \n",
      "1975-03-31          NaN       NaN       NaN       NaN\n",
      "1975-06-30     0.022113  0.007145  0.012048  0.023494\n",
      "1975-09-30     0.035092  0.017117  0.020050  0.032348\n",
      "1975-12-31     0.030419  0.013465  0.018428  0.024247\n",
      "1976-03-31     0.033293  0.022488  0.011460  0.008404\n",
      "...                 ...       ...       ...       ...\n",
      "2019-06-30     0.010162  0.003707  0.007483  0.012035\n",
      "2019-09-30     0.009866  0.006369  0.004522  0.011399\n",
      "2019-12-31     0.009613  0.005862  0.005882  0.017218\n",
      "2020-03-31    -0.008564 -0.012627  0.003007  0.013364\n",
      "2020-06-30    -0.094662 -0.089861 -0.008944  0.063950\n",
      "\n",
      "[182 rows x 4 columns]\n"
     ]
    }
   ],
   "source": [
    "percentchange = df.pct_change()\n",
    "print(percentchange)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "             Nominal GDP  Real GDP       CPI  Currency\n",
      "Nominal GDP     1.000000  0.899175  0.534706 -0.125334\n",
      "Real GDP        0.899175  1.000000  0.190902 -0.209856\n",
      "CPI             0.534706  0.190902  1.000000  0.005621\n",
      "Currency       -0.125334 -0.209856  0.005621  1.000000\n"
     ]
    }
   ],
   "source": [
    "df = pd.DataFrame(percentchange,columns=['Nominal GDP','Real GDP','CPI', 'Currency'])\n",
    "\n",
    "corrMatrix = df.corr()\n",
    "print (corrMatrix)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Interpretation\n",
    "\n",
    "In the first example, we were only looking at the levels of Nominal GDP, Real GDP, CPI, and Currency in Circulation, and found they were all almost perfectly collinear. However, our results alter when we look at the percentage changes over period. A decrease in currency in circulation causes both nominal and real GDP to go down."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
